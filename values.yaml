# Nextcloud server host name
# Example: nextcloud.local
nextcloudHost: 'nextcloud.local'
# OpenProject server host name
# Example: openproject.local
openprojectHost: 'openproject.local'
# Keycloak server host name
# Example: keycloak.local
keycloakHost: 'keycloak.local'

# Integration app setup method
# Options: 'oauth2', 'sso-nextcloud', 'sso-external'
integrationSetupMethod: 'oauth2'

nextcloud:
  fullnameOverride: 'nextcloud'
  image:
    # Nextcloud version image tag
    tag: '31'
  enableApps:
    # Add the folloing entry for each app you want to enable
    #   - name: 'app_name'   # Name of the app
    #     version: ''        # [Optional] Release version of the app
    #     gitBranch: ''      # [Optional] Git branch to use as the source
    # NOTE: 'version' will be ignored if 'gitBranch' is set
    - name: 'integration_openproject'
      version: ''
      gitBranch: ''
    - name: 'oidc'
      version: ''
      gitBranch: ''
    - name: 'user_oidc'
      version: ''
      gitBranch: ''
    - name: 'groupfolders'
      version: ''
      gitBranch: ''
  lifecycle:
    postStartCommand:
      - /bin/sh
      - -c
      - |
        rm -f /etc/ssl/certs/OPNC_Root_CA.pem /usr/local/share/ca-certificates/OPNC_Root_CA.crt && \
        cp /certs/ca.crt /usr/local/share/ca-certificates/OPNC_Root_CA.crt || true && \
        update-ca-certificates && \
        /docker-entrypoint-hooks.d/presetup.sh >> /var/log/presetup.log 2>&1
  nextcloud:
    host: nextcloud.local
    username: admin
    password: admin
    extraEnv:
      # Git branch to use as the source
      - name: NC_SERVE_GIT_BRANCH
        value: ''
      - name: OVERWRITECLIURL
        value: 'https://nextcloud.local'
      - name: OIDC_KEYCLOAK_NEXTCLOUD_CLIENT_ID
        value: nextcloud
      - name: OIDC_KEYCLOAK_NEXTCLOUD_CLIENT_SECRET
        value: nextcloud-secret
      - name: OIDC_KEYCLOAK_PROVIDER_NAME
        value: keycloak
      - name: OIDC_KEYCLOAK_DISCOVERY_URL
        value: https://keycloak.local/realms/opnc/.well-known/openid-configuration
      - name: NEXTCLOUD_ENABLE_APPS
        valueFrom:
          configMapKeyRef:
            name: nextcloud-enable-apps
            key: enable-apps
    extraVolumes:
      - name: presetup
        configMap:
          name: nc-presetup-configmap
          defaultMode: 0755
      - name: preinstall
        configMap:
          name: nc-preinstall-configmap
          defaultMode: 0755
      - name: postinstall
        configMap:
          name: nc-postinstall-configmap
          defaultMode: 0755
      - name: ca-cert
        secret:
          secretName: opnc-ca-secret
    extraVolumeMounts:
      - name: presetup
        mountPath: /docker-entrypoint-hooks.d/presetup.sh
        subPath: presetup.sh
      - name: preinstall
        mountPath: /docker-entrypoint-hooks.d/pre-installation/preinstall.sh
        subPath: preinstall.sh
      - name: postinstall
        mountPath: /docker-entrypoint-hooks.d/post-installation/postinstall.sh
        subPath: postinstall.sh
      - name: ca-cert
        mountPath: /certs
  internalDatabase:
    enabled: false
  externalDatabase:
    enabled: true
    type: postgresql
    host: nc-postgresql
    database: nextcloud
    user: nextcloud
    password: nextcloud
  postgresql:
    enabled: true
    fullnameOverride: 'nc-postgresql'
    global:
      postgresql:
        auth:
          username: nextcloud
          password: nextcloud
          database: nextcloud
    primary:
      podLabels:
        app.kubernetes.io/name: 'nc-postgresql'
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

openproject:
  fullnameOverride: 'openproject'
  # See https://github.com/opf/helm-charts/issues/201#issuecomment-2908788062
  containerSecurityContext:
    readOnlyRootFilesystem: false
  image:
    tag: '16.1'
  # TODO: currently, the container entrypoint cannot be overridden
  # See: https://github.com/opf/helm-charts/issues/215
  # command: ['/scripts/entrypoint.sh']
  openproject:
    https: true
    host: openproject.local
    admin_user:
      password_reset: 'false'
    oidc:
      enabled: true
      displayName: 'Keycloak'
      identifier: 'openproject'
      secret: 'openproject-secret'
      authorizationEndpoint: '/realms/opnc/protocol/openid-connect/auth'
      tokenEndpoint: '/realms/opnc/protocol/openid-connect/token'
      userinfoEndpoint: '/realms/opnc/protocol/openid-connect/userinfo'
      host: 'keycloak.local'
  environment:
    OPENPROJECT_DEV_EXTRA_HOSTS: 'openproject.local'
    OPENPROJECT_APIV3__ENABLE__BASIC__AUTH: 'true'
    OPENPROJECT_AUTHENTICATION_GLOBAL__BASIC__AUTH_USER: 'admin'
    OPENPROJECT_AUTHENTICATION_GLOBAL__BASIC__AUTH_PASSWORD: 'admin'
    OPENPROJECT_OPENID__CONNECT_KEYCLOAK_ISSUER: https://keycloak.local/realms/opnc
    OPENPROJECT_OPENID__CONNECT_KEYCLOAK_POST__LOGOUT__REDIRECT__URI: https://openproject.local/
    DATABASE_HOST: 'op-postgresql'
    OPENPROJECT_SEED__ENTERPRISE__TOKEN: ''
    # Git branch to use as the source
    # NOTE: 'version' will be ignored if this is set
    # Example: dev
    OP_GIT_SOURCE_BRANCH: ''
  dbInit:
    resources:
      limits:
        memory: '1Gi'
      requests:
        memory: '512Mi'
  appInit:
    resources:
      limits:
        memory: '1Gi'
      requests:
        memory: '512Mi'
  extraVolumes:
    - name: entrypoint
      configMap:
        name: op-entry-configmap
        defaultMode: 0755
    - name: ca-cert
      secret:
        secretName: opnc-ca-secret
  extraVolumeMounts:
    - name: entrypoint
      mountPath: /scripts
    - name: ca-cert
      mountPath: /certs
  postgresql:
    fullnameOverride: 'op-postgresql'
    image:
      tag: '17.5.0-debian-12-r16'
    auth:
      password: 'openproject'
    primary:
      podLabels:
        app.kubernetes.io/name: 'op-postgresql'

keycloak:
  host: keycloak.local
  fullnameOverride: 'keycloak'
  service:
    ports:
      http: 8080
  image:
    tag: '26.2.5'
  command: ['/scripts/entrypoint.sh']
  usePasswordFiles: false
  auth:
    adminUser: 'admin'
    adminPassword: 'admin'
  extraEnvVars:
    - name: KEYCLOAK_HOSTNAME
      value: keycloak.local
    - name: KC_REALM_NAME
      value: opnc
    - name: KC_NEXTCLOUD_CLIENT_ID
      value: nextcloud
    - name: KC_NEXTCLOUD_CLIENT_SECRET
      value: nextcloud-secret
    - name: KC_NEXTCLOUD_CLIENT_HOST
      value: nextcloud.local
    - name: KC_OPENPROJECT_CLIENT_ID
      value: openproject
    - name: KC_OPENPROJECT_CLIENT_SECRET
      value: openproject-secret
    - name: KC_OPENPROJECT_CLIENT_HOST
      value: openproject.local
  extraVolumes:
    - name: entrypoint
      configMap:
        name: kc-entry-configmap
        defaultMode: 0755
  extraVolumeMounts:
    - name: entrypoint
      mountPath: /scripts
  cache:
    enabled: false
  postgresql:
    fullnameOverride: 'kc-postgresql'
    primary:
      podLabels:
        app.kubernetes.io/name: 'kc-postgresql'

oidc:
  realmName: 'opnc'
  clients:
    nextcloud:
      id: 'nextcloud'
      secret: 'nextcloud-secret'
    openproject:
      id: 'openproject'
      secret: 'openproject-secret'

ingress:
  # Ingress class name
  className: 'nginx'
  # TLS secret name
  tlsSecretName: 'opnc-tls-secret'
  # Use exisiting TLS secret name. If set, the above tlsSecretName will be ignored.
  existingTlsSecretName: ''
